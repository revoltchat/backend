[package]
name = "revolt-database"
version = "0.6.0-rc.1"
edition = "2021"
license = "AGPL-3.0-or-later"
authors = [ "Paul Makles <me@insrt.uk>" ]
description = "Revolt Backend: Database Implementation"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[features]
# Databases
mongodb = [ "dep:mongodb", "bson" ]

# ... Other
async-std-runtime = [ "async-std" ]
rocket-impl = [ "rocket", "schemars" ]
redis-is-patched = [ "revolt-presence/redis-is-patched" ]

# Default Features
default = [ "mongodb", "async-std-runtime" ]

[dependencies]
# Core
revolt-result = { version = "0.6.0-rc.1", path = "../result" }
revolt-models = { version = "0.6.0-rc.1", path = "../models" }
revolt-presence = { version = "0.6.0-rc.1", path = "../presence" }
revolt-permissions = { version = "0.6.0-rc.1", path = "../permissions", features = [ "serde", "bson" ] }

# Utility
log = "0.4"
ulid = "1.0.0"
nanoid = "0.4.0"
once_cell = "1.17"

# Serialisation
serde_json = "1"
revolt_optional_struct = "0.2.0"
serde = { version = "1", features = ["derive"] }
iso8601-timestamp = { version = "0.2.10", features = ["serde", "bson"] }

# Events
redis-kiss = { version = "0.1.4" }

# Database
bson = { optional = true, version = "2.1.0" }
mongodb = { optional = true, version = "2.1.0", default-features = false }

# Async Language Features
futures = "0.3.19"
async-trait = "0.1.51"
async-recursion = "1.0.4"

# Async
async-std = { version = "1.8.0", features = ["attributes"], optional = true }

# Rocket Impl
schemars = { version = "0.8.8", optional = true }
rocket = { version = "0.5.0-rc.2", default-features = false, features = ["json"], optional = true }

# Authifier
authifier = { version = "1.0" }
